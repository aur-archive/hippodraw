--- HippoDraw-1.21.3.orig/qt/CanvasView.cxx	2007-07-03 00:17:16.000000000 +0600
+++ HippoDraw-1.21.3/qt/CanvasView.cxx	2012-05-08 12:41:47.296177898 +0600
@@ -1672,12 +1672,12 @@
 
 	  if ( cut_low < plotter_low )
 	    {
-	      Range currentRange = Range::Range ( plotter_low, cut_high );
+	      Range currentRange = typename Range::Range ( plotter_low, cut_high );
 	      cut1d -> setCutRangeAt ( currentRange , 0 );
 	    }
 	  if ( cut_high > plotter_high )
 	    {
-	      Range currentRange = Range::Range ( cut_low , plotter_high );
+	      Range currentRange = typename Range::Range ( cut_low , plotter_high );
 	      cut1d -> setCutRangeAt ( currentRange , 0 );
 	    }
 	}
@@ -1699,23 +1699,23 @@
 
 	  if ( cut_low_x < plotter_low_x )
 	    {
-	      Range currentRange = Range::Range ( plotter_low_x, cut_high_x );
+	      Range currentRange = typename Range::Range ( plotter_low_x, cut_high_x );
 	      cut2d -> setCutRangeAt ( currentRange , 0 );
 	    }
 	  if ( cut_high_x > plotter_high_x )
 	    {
-	      Range currentRange = Range::Range ( cut_low_x , plotter_high_x );
+	      Range currentRange = typename Range::Range ( cut_low_x , plotter_high_x );
 	      cut2d -> setCutRangeAt ( currentRange , 0 );
 	    }
 	  
 	  if ( cut_low_y < plotter_low_y )
 	    {
-	      Range currentRange = Range::Range ( plotter_low_y, cut_high_y );
+	      Range currentRange = typename Range::Range ( plotter_low_y, cut_high_y );
 	      cut2d -> setCutRangeAt ( currentRange , 1 );
 	    }
 	  if ( cut_high_y > plotter_high_y )
 	    {
-	      Range currentRange = Range::Range ( cut_low_y , plotter_high_y );
+	      Range currentRange = typename Range::Range ( cut_low_y , plotter_high_y );
 	      cut2d -> setCutRangeAt ( currentRange , 1 );
 	    }
 	}
@@ -1732,13 +1732,13 @@
 	  double old_high = oldRange.high();
 
 	  if ( datax < ( old_low + old_high ) / 2 ) {
-	    Range currentRange = Range::Range ( datax , old_high );
+	    Range currentRange = typename Range::Range ( datax , old_high );
 	    cut1d -> setCutRangeAt ( currentRange , 0 );
 	  }
 	  
 	  else
 	    {
-	      Range currentRange = Range::Range ( old_low , datax );
+	      Range currentRange = typename Range::Range ( old_low , datax );
 	      cut1d -> setCutRangeAt ( currentRange , 0 );
 	    }
 	  notifyObservers();
@@ -1763,7 +1763,7 @@
 	  if ( ( dis_low_x <= 0.1 * (old_high_x - old_low_x)) &&
 	       ( dis_low_y <= 0.1 * (old_high_y - old_low_y)) &&
 	       ( m_edge == 0 ) || ( m_edge == 1 ) ) {
-	    Range currentRange = Range::Range ( datax, old_high_x );
+	    Range currentRange = typename Range::Range ( datax, old_high_x );
 	    cut2d -> setCutRangeAt ( currentRange, 0 );
 
 	    // Handle shift drag.
@@ -1777,10 +1777,10 @@
 	      // is protected.
 	      vector <double> adjusted;
 	      qtview->fillPickedPoint(view_left, view_bottom, adjusted);
-	      currentRange = Range::Range ( adjusted[2], old_high_y );
+	      currentRange = typename Range::Range ( adjusted[2], old_high_y );
 	    }
 	    else
-	      currentRange = Range::Range ( datay, old_high_y );
+	      currentRange = typename Range::Range ( datay, old_high_y );
 	    cut2d -> setCutRangeAt ( currentRange, 1 );
 	    m_edge = 1;
 	  }
@@ -1789,7 +1789,7 @@
 	  else if ( ( dis_low_x <= 0.1 * (old_high_x - old_low_x)) &&
 		    ( dis_high_y <= 0.1 * (old_high_y - old_low_y)) &&
 		    ( m_edge == 0 ) || ( m_edge == 2 ) ) {
-	    Range currentRange = Range::Range ( datax, old_high_x );
+	    Range currentRange = typename Range::Range ( datax, old_high_x );
 	    cut2d -> setCutRangeAt ( currentRange, 0 );
 
 	    // Handle shift drag
@@ -1803,10 +1803,10 @@
 	      // is protected.
 	      vector <double> adjusted;
 	      qtview->fillPickedPoint(view_left, view_top, adjusted);
-	      currentRange = Range::Range ( old_low_y, adjusted[2]);
+	      currentRange = typename Range::Range ( old_low_y, adjusted[2]);
 	    }
 	    else
-	      currentRange = Range::Range ( old_low_y, datay );
+	      currentRange = typename Range::Range ( old_low_y, datay );
 	    cut2d -> setCutRangeAt ( currentRange, 1 );
 	    m_edge = 2;
 	  }
@@ -1815,7 +1815,7 @@
 	  else if ( ( dis_high_x <= 0.1 * (old_high_x - old_low_x)) &&
 		    ( dis_low_y <= 0.1 * (old_high_y - old_low_y)) &&
 		    ( m_edge == 0 ) || ( m_edge == 3 ) ) {
-	    Range currentRange = Range::Range ( old_low_x, datax );
+	    Range currentRange = typename Range::Range ( old_low_x, datax );
 	    cut2d -> setCutRangeAt ( currentRange, 0 );
 
 	    // Handle shift drag.
@@ -1829,10 +1829,10 @@
 	      // is protected.
 	      vector <double> adjusted;
 	      qtview->fillPickedPoint(view_right, view_bottom, adjusted);
-	      currentRange = Range::Range ( adjusted[2], old_high_y );
+	      currentRange = typename Range::Range ( adjusted[2], old_high_y );
 	    }
 	    else
-	      currentRange = Range::Range ( datay, old_high_y );
+	      currentRange = typename Range::Range ( datay, old_high_y );
 	    cut2d -> setCutRangeAt ( currentRange, 1 );
 	    m_edge = 3;
 	  }
@@ -1841,7 +1841,7 @@
 	  else if ( ( dis_high_x <= 0.1 * (old_high_x - old_low_x)) &&
 		    ( dis_high_y <= 0.1 * (old_high_y - old_low_y)) &&
 		    ( m_edge == 0) || ( m_edge == 4 ) ) {
-	    Range currentRange = Range::Range ( old_low_x, datax );
+	    Range currentRange = typename Range::Range ( old_low_x, datax );
 	    cut2d -> setCutRangeAt ( currentRange, 0 );
 
 	    // Handle shift drag.
@@ -1855,10 +1855,10 @@
 	      // is protected.
 	      vector <double> adjusted;
 	      qtview->fillPickedPoint(view_right, view_top, adjusted);
-	      currentRange = Range::Range ( old_low_y, adjusted[2] );
+	      currentRange = typename Range::Range ( old_low_y, adjusted[2] );
 	    }
 	    else
-	      currentRange = Range::Range ( old_low_y, datay );
+	      currentRange = typename Range::Range ( old_low_y, datay );
 	    cut2d -> setCutRangeAt ( currentRange, 1 );
 	    m_edge = 4;
 	  }
@@ -1868,7 +1868,7 @@
 		    ( dis_low_x <= dis_low_y ) &&
 		    ( dis_low_x <= dis_high_y ) && 
 		    ( m_edge == 0 ) || ( m_edge == 5 ) ) {
-	    Range currentRange = Range::Range ( datax, old_high_x );
+	    Range currentRange = typename Range::Range ( datax, old_high_x );
 	    cut2d -> setCutRangeAt ( currentRange, 0 );
 	    m_edge = 5;
 	  }
@@ -1878,7 +1878,7 @@
 		    ( dis_high_x <= dis_low_y ) &&
 		    ( dis_high_x <= dis_high_y ) &&
 		    ( m_edge == 0 ) || ( m_edge == 6 ) ) {
-	    Range currentRange = Range::Range ( old_low_x, datax );
+	    Range currentRange = typename Range::Range ( old_low_x, datax );
 	    cut2d -> setCutRangeAt ( currentRange, 0 );
 	    m_edge = 6;
 	  } 
@@ -1888,7 +1888,7 @@
 		    ( dis_low_y <= dis_low_x ) &&
 		    ( dis_low_y <= dis_high_y ) &&
 		    ( m_edge == 0 ) || ( m_edge == 7 ) ) {
-	    Range currentRange = Range::Range ( datay, old_high_y );
+	    Range currentRange = typename Range::Range ( datay, old_high_y );
 	    cut2d -> setCutRangeAt ( currentRange, 1 );
 	    m_edge = 7;
 	  }
@@ -1896,7 +1896,7 @@
 	  // Top
 	  else 
 	    {
-	      Range currentRange = Range::Range ( old_low_y, datay );
+	      Range currentRange = typename Range::Range ( old_low_y, datay );
 	      cut2d -> setCutRangeAt ( currentRange, 1 );
 	      m_edge = 8;
 	    }
@@ -1926,7 +1926,7 @@
 	      high= old_pos;
 	    }
 
-	    Range currentRange = Range::Range ( low, high );
+	    Range currentRange = typename Range::Range ( low, high );
 	    cut1d -> setCutRangeAt ( currentRange , 0 );
 	  }
 	  notifyObservers();
@@ -1949,7 +1949,7 @@
 	      low = datax;
 	      high = old_pos_x;
 	    }
-	    Range currentRange = Range::Range ( low, high );
+	    Range currentRange = typename Range::Range ( low, high );
 	    cut2d -> setCutRangeAt ( currentRange, 0 );
 
 	    if ( datay > old_pos_y ) {
@@ -1960,7 +1960,7 @@
 	      low = datay;
 	      high = old_pos_y;
 	    }
-	    currentRange = Range::Range ( low, high );
+	    currentRange = typename Range::Range ( low, high );
 	    cut2d -> setCutRangeAt ( currentRange, 1 );
 	  }
 	  notifyObservers();
@@ -1991,7 +1991,7 @@
 	      low = datax - width/2;
 	      high = datax + width/2;
 	    }
-	  Range currentRange = Range::Range ( low, high );
+	  Range currentRange = typename Range::Range ( low, high );
 	  cut1d -> setCutRangeAt (currentRange, 0 );
 	  notifyObservers();
 	}
@@ -2035,9 +2035,9 @@
 	      high_y = datay + width_y/2;
 	    }
 
-	  Range currentRange = Range::Range ( low_x, high_x );
+	  Range currentRange = typename Range::Range ( low_x, high_x );
 	  cut2d -> setCutRangeAt (currentRange, 0 );
-	  currentRange = Range::Range ( low_y, high_y );
+	  currentRange = typename Range::Range ( low_y, high_y );
 	  cut2d -> setCutRangeAt (currentRange, 1 );
 	  notifyObservers();
 	}
